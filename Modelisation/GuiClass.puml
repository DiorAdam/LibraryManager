@startuml

class loginPanel{
    JLabel id ; JTextField id_
    JLabel password ; JTextField password_
    JLabel login as an Admin ; JTextField Admin_
    JLabel adminWorksIfYouAreAdmin
}

loginPanel ..> User

class User{
    String id, name, firstName, password
    Vector<String> borrowed
    boolean isAdmin, admin
    /'isAdmin is from the DB while admin says if
      the user is logged in as an admin '/
}

User ..> Users

class Users{
    add()
    delete(String id)
    edit()
}

class UserInfoPanel{
    JLabel name , email ...
    JLabel Borrowed
    JButton delete , edit
}

UserInfoPanel ..> User

class UserPanel extends JTabbedPane{

    SearchPanel search
    UserInfoPanel UI

}

UserPanel ..> UserInfoPanel
UserPanel ..> SearchPanel


class SearchPanel{
    JTextField search
    JButton searchBook , searchUser
}

SearchPanel ..> Books
SearchPanel ..> Users
SearchPanel ..> UserInfoPanel
SearchPanel ..> BookInfoPanel

class BookInfoPanel{
    JLabel title, title_
    JLabel year, year_
    JLabel author , author_
    JLabel remaining , remaining_
    if (Admin) JButton delete / edit
}

BookInfoPanel ..> Book

class Book{
    int id , year , remaining
    String title , author
}

Book ..> Books


class AdminPanel extends JTabbedPane{
    JPanel searchPanel
    JPanel addBook
    JPanel addUser
}

AdminPanel ..> AddBookPanel
AdminPanel ..> AddUserPanel
AdminPanel ..> SearchPanel

class AddBookPanel {
    int id , year , remaining
    String title , author
}

AddBookPanel ..> Books

class AddUserPanel{
    String id, name, firstName, password
    Vector<String> borrowed
    boolean isAdmin
}

AddUserPanel ..> Users


class Books{
    add()
    edit(id)
    delete(id)
}


@enduml

/'
abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList

class ArrayList {
Object[] elementData
size()
}

enum TimeUnit {
DAYS
HOURS
MINUTES
}
'/